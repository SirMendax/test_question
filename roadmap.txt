////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Закончить DIContainer. В данный момент - это просто контейнер, хранящий базовые классы.
   а) Автоматическое внедрение зависимостей через Reflection API.
   б) Внедрение зависимостей через методы вызываемых классов.

2. Доработать класс Request (отчистка параметров, добавление массива с файлами)

3. Переработать модели - они должны отражать структуру своих таблиц. Это откроет возможность осуществлять добавление новых записей в таблицу через объект.

4. Написать модуль авторизации через OAuth или JWT.

5. Создать прослойку middleware. Для навешивания заголовков (в том числе CORS), ограничения по количеству соединений в секунду с одного IP и провервки авторизации.


                                            Общая схема работы приложения
    ==========
    || HTTP ||
    ==========

        || ?JSON = null
        \/

    ===========   извлечение названия   =================
    ||  APP  ||         < = >           ||    Router   ||
    ===========       контроллера       =================

        ||
        \/

    ===========   передача контроллера  =================
    ||  APP  ||         < = >           ||  Container  ||
    ===========     в контейнер app     =================
                                              /\
        ||                                    ||
        \/                                    \/
  ================               Проанализировать контроллер (наличие классов для инъекции в конструкторе
  || Controller ||               и в методе контроллера, произвести инъекцию классов. Базовые классы - Response&Request, Сервисы, Репозитории
  ================               (но Request нужен для методов, принимающих данные из браузера - GET-параметры, POST-параметры и файлы)
        ||
        \/
====================
||   Service &    ||     Коннет с ДБ     ================
|| Repositories & ||        < = >        || Model & DB ||
||   Validators   ||  Извлечение данных  ================
====================
        ||
        \/
====================
||    Response    ||
|| ->sendResponse ||
|| (data,code,msg)||
====================
        ||JSON
        \/
      BROWSER
